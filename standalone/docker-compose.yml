version: '3'

# 指定ip容器内部相互访问
networks:
  my_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16

services:
  # --- MySQL
  mysql-5.7:
    platform: linux/x86_64
    image: mysql:5.7
    container_name: mysql-5.7
    environment:
      # 时区上海
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: L0rfBGXhvrt9f7L8
    ports:
      - "7033:3307"
    volumes:
      # 数据挂载
      - ./mysql-5.7/data/:/var/lib/mysql/
      # 配置挂载
      - ./mysql-5.7/conf/:/etc/mysql/conf.d/
      # 日志
      - ./mysql-5.7/logs/:/logs
      # 初始化脚本
      - ./mysql/source:/docker-entrypoint-initdb.d
      # my.cnf
      - ./mysql-5.7/my.cnf:/etc/mysql/my.cnf
    command:
      --init-file /docker-entrypoint-initdb.d/init.sql
    privileged: true
    restart: always
    networks:
      my_net:
        ipv4_address: 172.30.0.33


  # --- MySQL
  mysql:
    platform: linux/x86_64
    image: mysql:8.0.27
    container_name: mysql
    environment:
      # 时区上海
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: L0rfBGXhvrt9f7L8
    ports:
      - "6033:3306"
    volumes:
      # 数据挂载
      - ./mysql/data/:/var/lib/mysql/
      - ./mysql/mysql-files:/var/lib/mysql-files/
      # 配置挂载
      - ./mysql/conf/:/etc/mysql/conf.d/
      # 日志
      - ./mysql/logs/:/logs
      # 初始化脚本
      - ./mysql/source:/docker-entrypoint-initdb.d
      # my.cnf
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    command:
      --init-file /docker-entrypoint-initdb.d/init.sql
    privileged: true
    restart: always
    networks:
      my_net:
        ipv4_address: 172.30.0.36

  # ---- Redis
  redis:
    image: redis:6.2.6
    container_name: redis
    ports:
      - "9736:6379"
    environment:
      # 时区上海
      TZ: Asia/Shanghai
    volumes:
      # 配置文件
      - ./redis/conf/redis.conf:/redis/config/redis.conf
      # 数据文件
      - ./redis/data/:/redis/data
    command: "redis-server /redis/config/redis.conf"
    privileged: true
    restart: always
    networks:
      my_net:
        ipv4_address: 172.30.0.48

  # --- MINIO
  minio:
    image: minio/minio
    container_name: minio
    ports:
      # api 端口
      - "9000:9000"
      # 控制台端口
      - "9001:9001"
    environment:
      # 时区上海
      TZ: Asia/Shanghai
      # 管理后台用户名
      MINIO_ACCESS_KEY: minio
      # 管理后台密码，最小8个字符
      MINIO_SECRET_KEY: 'L0rfBGXhvrt9f7L8'
      # https需要指定域名
      MINIO_SERVER_URL: ""
    volumes:
      # 映射当前目录下的data目录至容器内/data目录
      - ./minio/data:/data
      # 映射配置目录
      - ./minio/config:/root/.minio/
    command: server --address ':9000' --console-address ':9001' /data  # 指定容器中的目录 /data
    privileged: true
    restart: always
    networks:
      my_net:
        ipv4_address: 172.30.0.54

  # --- Zookeeper
  zookeeper:
    image: zookeeper:3.6.3
    container_name: zookeeper
    environment:
      # 时区上海
      TZ: Asia/Shanghai
    privileged: true
    volumes:
      - ./zookeeper/data:/data
      - ./zookeeper/datalogs:/datalogs
      - ./zookeeper/logs:/logs
    ports:
      - '1812:2181'
    networks:
      my_net:
        ipv4_address: 172.30.0.15

  # --- xxl-job-admin
  xxl-job-admin:
    image: xuxueli/xxl-job-admin:2.3.0
    container_name: xxl-job-admin
    environment:
      # 时区上海
      TZ: Asia/Shanghai
      # 参数
      PARAMS: '--spring.datasource.url=jdbc:mysql://172.30.0.36:3306/xxl_job?Unicode=true&characterEncoding=UTF-8 --spring.datasource.username=root --spring.datasource.password=ucD&#ZF!hPbWLWxF'
    volumes:
      # 配置文件
      - ./xxljob/applogs/:/data/applogs
    privileged: true
    restart: always
    ports:
      - '9181:8080'
    networks:
      my_net:
        ipv4_address: 172.30.0.92

  # dubbo-admin
  dubbo-admin:
    image: apache/dubbo-admin
    container_name: dubbo-admin
    environment:
      TZ: Asia/Shanghai
      admin.registry.address: nacos://nacos:8488
      admin.config-center: nacos://nacos:8488
      admin.metadata-report.address: nacos://nacos:8488
    privileged: true
    ports:
      - '8934:8080'
    networks:
      my_net:
        ipv4_address: 172.30.0.9

  # nacos-server
  nacos-server:
    image: nacos/nacos-server:v2.2.0
    container_name: nacos-server
    restart: always
    environment:
      PREFER_HOST_MODE: ip
      MODE: standalone
      SPRING_DATASOURCE_PLATFORM: mysql
      # mysql信息配置
      MYSQL_SERVICE_HOST: mysql
      MYSQL_SERVICE_DB_NAME: nacos_dev
      MYSQL_SERVICE_PORT: 3306
      MYSQL_SERVICE_USER: root
      MYSQL_SERVICE_PASSWORD: 'ucD&#ZF!hPbWLWxF'
      MYSQL_SERVICE_DB_PARAM: characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true
      JVM_XMS: 128m
      JVM_MMS: 128m
    volumes:
      - ./nacos/logs/:/home/nacos/logs
    ports:
      - "8488:8848"
      - "8489:9848"
      - "5559:9555"
    networks:
      my_net:
        ipv4_address: 172.30.0.19